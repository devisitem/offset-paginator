/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/6.8.3/samples
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

apply from: 'publish-info.gradle'

ext {
    projectEncoding = 'UTF-8'

    versions = [
            'jupiter' : '5.8.2',
            'mockito' : '4.1.0',
            'json'    : '20230227'
    ]
}

// Util Group
group 'kr.devis.util'
version PUBLISH_VERSION
java.sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

java {
    withSourcesJar()
    withJavadocJar()
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = PUBLISH_ARTIFACT_ID
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = PUBLISH_ARTIFACT_ID
                description = PUBLISH_DESCRIPTION
                url = PUBLISH_URL

                groupId = PUBLISH_GROUP_ID
                artifactId = PUBLISH_ARTIFACT_ID
                version = PUBLISH_VERSION

//                properties = []
                licenses {
                    license {
                        name = PUBLISH_LICENSE_NAME
                        url = PUBLISH_LICENSE_URL
                    }
                }
                developers {
                    developer {
                        id = PUBLISH_DEVELOPER_ID
                        name = PUBLISH_DEVELOPER_NAME
                        email = PUBLISH_DEVELOPER_EMAIL
                    }
                }
                scm {
                    connection = PUBLISH_SCM_CONNECTION
                    developerConnection = PUBLISH_SCM_DEVELOPER_CONNECTION
                    url = PUBLISH_SCM_URL
                }
            }
        }
    }
    repositories {
        maven {
            // 실행시 주입 -PossrhUsername=xxx -PossrhPassword=xxx
            credentials {
                username = ossrhUsername ?: System.getenv("OSSRH_USERNAME")
                password = ossrhPassword ?: System.getenv("OSSRH_PASSWORD")
            }

            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/"

            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

dependencies {
    //json parser
    implementation "org.json:json:${versions['json']}"
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // JUnit
    testImplementation("org.junit.jupiter:junit-jupiter-api:${versions['jupiter']}}")
    testImplementation("org.junit.jupiter:junit-jupiter-params:${versions['jupiter']}")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:${versions['jupiter']}")
    testImplementation("org.junit.platform:junit-platform-launcher:1.8.2")

    // Mockito
    testImplementation("org.mockito:mockito-core:${versions['mockito']}")
    testImplementation("org.mockito:mockito-junit-jupiter:${versions['mockito']}")
    testImplementation("org.mockito:mockito-junit-jupiter:${versions['mockito']}")
}

signing {
    sign publishing.publications.mavenJava
}

// 컴파일 인코딩 설정
[compileJava, compileTestJava]*.options*.encoding = "$projectEncoding"

// https://docs.gradle.org/current/userguide/publishing_setup.html#publishing_overview 참고
// ':signMavenJavaPublication' because it has no configured signatory: 키서버에 키가 없음